$check-size: (
	'xl': (
		size: '32px',
		border-width: 2px,
		margin-right: 16px,
		ratio: 1.75,
	),
	'lg': (
		size: '24px',
		border-width: 1px,
		margin-right: 12px,
		ratio: 1.6666666667,
	),
	'md': (
		size: '20px',
		border-width: 1px,
		margin-right: 8px,
		ratio: 1.6,
	),
	'sm': (
		size: '16px',
		border-width: 1px,
		margin-right: 8px,
		ratio: 1.75,
	),
);
$input-transition: $btn-transition;
.form-group {
	position: relative;
}
// input
.form-input {
	position: relative;
	display: block;
	width: 100%;
	font-family: inherit;
	padding: $input-padding-y $input-padding-x;
	color: $grayscale-700;
	background-color: $white;
	background-clip: padding-box;
	border: $border-default;
	border-radius: $border-radius;
	transition: $input-transition;
	&,
	&::placeholder {
		@extend .f-s-p-14;
	}
	&::placeholder {
		color: $grayscale-500;
	}
	&:hover {
		border-color: $grayscale;
	}
	&:focus {
		outline: 0;
		box-shadow: 0 0 0 2px $grayscale-300;
	}
	&:disabled,
	&[readonly] {
		background-color: $grayscale-100;
		color: $grayscale-400;
		pointer-events: none;
	}
	&.is-invalid {
		border-color: $danger;
		&:focus {
			box-shadow: 0 0 0 2px $danger-300;
		}
	}
	// size
	&-lg {
		padding: 5px 16px;
		&,
		&::placeholder {
			@extend .f-s-p-16;
		}
	}
	&-md {
		padding: 5px 12px;
		&,
		&::placeholder {
			@extend .f-s-p-14;
		}
	}
	&-sm {
		padding: 3px 8px;
		&,
		&::placeholder {
			@extend .f-s-p-14;
		}
	}
}

input[type='password'] {
	font: small-caption;
	&::placeholder {
		position: absolute;
		top: 50%;
		transform: translateY(-50%);
	}
	&.form-input-lg {
		height: 36px;
		font-size: 36px;
	}
	&.form-input-md {
		height: 32px;
		font-size: 32px;
	}
	&.form-input-sm {
		height: 28px;
		font-size: 28px;
	}
}

select {
	// appearance: none;
	&:before {
		content: '\e91f';
		position: absolute;
		top: 50%;
	}
}

textarea {
	resize: none;
}

.form-date {
	position: relative;
	display: block;
	width: 100%;
	&-icon {
		position: absolute;
		top: 50%;
		transform: translateY(-50%);
		color: $grayscale-700;
		pointer-events: none;
	}
	.form-input:disabled + .form-date-icon {
		color: $grayscale-400;
	}
}
input[type='datetime-local'] {
	appearance: none;
	&::-webkit-calendar-picker-indicator {
		background: none;
		padding: 0;
		cursor: pointer;
	}
	&.form-input-lg {
		&::-webkit-calendar-picker-indicator {
			margin: 0 -6px 0 0;
			width: 20px;
			height: 20px;
		}
		& + .form-date-icon {
			right: 10px;
		}
	}
	&.form-input-md {
		&::-webkit-calendar-picker-indicator {
			margin: 0 -6px 0 0;
			width: 16px;
			height: 16px;
		}
		& + .form-date-icon {
			right: 8px;
		}
	}
	&.form-input-sm {
		&::-webkit-calendar-picker-indicator {
			margin: 0;
			width: 14px;
			height: 14px;
		}
		& + .form-date-icon {
			right: 8px;
		}
	}
}

.checkbox,
.radio {
	display: flex;
	align-items: end;
	label {
		cursor: pointer;
		@extend .f-s-p-14;
	}
	input {
		position: relative;
		border: none;
		margin: 0;
		-webkit-appearance: none;
		appearance: none;
		cursor: pointer;
		outline: none;
		&:disabled ~ label {
			color: $grayscale-500;
			pointer-events: none;
		}
	}
	&-icon {
		align-items: center;
	}
	&-single {
		input[type='radio'],
		input[type='checkbox'] {
			margin: 0;
		}
	}
}

.checkbox {
	input[type='checkbox'] {
		&:before {
			content: '\e936';
			font-family: 'icon';
			position: absolute; 
			top: 0;
			right: 0;
			color: $white;
			display: flex;
			align-items: center;
			justify-content: center;
		}
		&:after {
			content: '';
			display: block;
			border-color: $grayscale-400;
			border-style: solid;
			border-radius: $border-radius;
			transition: $transition;
		}
		&:disabled {
			cursor: not-allowed;
		}
		&:disabled::after {
			background: $grayscale-200;
		}
		&:disabled::before {
			color: $grayscale-200;
		}
		&:checked::after {
			background-color: $primary-500;
			border-color: $primary-500;
			outline: none;
		}
		&:disabled:checked {
			&:before {
				color: $white;
			}
			&:after {
				background: $grayscale-400;
				border-color: $grayscale-400;
			}
		}
	}
}

.radio {
	input[type='radio'] {
		&:after,
		&:before {
			content: '';
			display: block;
			border-radius: 50%;
			-webkit-transition: $transition;
			-o-transition: $transition;
			transition: $transition;
		}
		&:before {
			position: absolute;
			left: 0;
			top: 0;
			background-color: $white;
			-webkit-transform: scale(0);
			-ms-transform: scale(0);
			-o-transform: scale(0);
			transform: scale(0);
		}
		&:after {
			position: relative;
			top: 0;
			border-color: $grayscale-400;
			border-style: solid;
			background: $white;
		}
		&:disabled {
			cursor: not-allowed;
		}
		&:disabled::after {
			background: $grayscale-200;
		}
		&:checked::before {
			transform: scale(0.625);
			z-index: 2;
			background: $primary-500;
		}
		&:checked:after {
			border-color: $primary-500;
		}
		&:checked:disabled {
			&:after {
				border-color: $grayscale-400;
				background: $white;
			}
			&:before {
				background: $grayscale-400;
			}
		}
	}
}

@each $size, $detail in $check-size {
	$value: map-get($detail, 'size');
	$border-width-value: map-get($detail, 'border-width');
	$margin: map-get($detail, 'margin-right');
	$ratio: map-get($detail, 'ratio');
	.radio-#{$size},
	.checkbox-#{$size} {
		input {
			margin-right: $margin;
			margin-top: $margin / 6;
			&:after,
			&:before {
				width: #{$value};
				height: #{$value};
			}
			&:after {
				border-width: $border-width-value;
			}
		}
	}
	.checkbox-#{$size} {
		input {
			&:before {
				font-size: calc(#{$value} * 0.625);
			}
		}
	}
	.switch-#{$size} {
		input[type='checkbox'] {
			+ label {
				width: calc(#{$value} * #{$ratio});
				height: #{$value};
				&:after,
				&:before {
					width: calc(#{$value} - #{$border-width-value * 4});
				}
			}
		}
		&.switch-help-text {
			.switch-label {
				margin-right: $margin;
				margin-top: $margin / 6;
			}
		}
	}
}

.switch {
	display: inline-flex;
	align-items: center;
	$this: &;
	input[type='checkbox'] {
		display: none;
		+ #{$this}-label {
			outline: 0;
			display: block;
			position: relative;
			cursor: pointer;
			user-select: none;
			padding: 2px;
			background: $grayscale-400;
			border-radius: 100px;
			transition: $transition;
			box-sizing: border-box;
			&::selection {
				background: none;
			}
			&:after,
			&:before {
				position: relative;
				display: block;
				content: '';
				height: 100%;
			}

			&:after {
				left: 0;
				border-radius: 50%;
				background: $white;
				transition: $transition;
			}

			&:before {
				display: none;
			}
		}
		&:checked + #{$this}-label {
			background: $primary;
			&:after {
				left: calc(50% - 2px);
			}
		}
		&:checked ~ .label {
			.label-text {
				font-weight: 500;
			}
		}
	}
	// status
	&-help-text {
		align-items: flex-start;
	}
	&-disabled {
		cursor: not-allowed;
		input[type='checkbox'] + #{$this}-label {
			pointer-events: none;
			background: $grayscale-200;
		}
		.label {
			pointer-events: none;
		}
	}
	// size
	&-xl {
		input[type='checkbox'] {
			+ #{$this}-label {
				&:after,
				&:before {
					width: calc(50% + 2px);
				}
			}
		}
	}
	&-sm {
		input[type='checkbox'] {
			&:checked + #{$this}-label {
				&:after {
					left: 50%;
				}
			}
		}
	}
}

.form-search {
	position: relative;
	display: flex;
	width: 100%;
	font-family: inherit;
	background-color: $white;
	background-clip: padding-box;
	border: $border-default;
	border-radius: $border-radius;
	transition: $input-transition;
	$this: &;
	&-icon {
		display: inline-flex;
		align-items: center;
		color: $grayscale;
		&:hover {
			color: $grayscale-600;
		}
	}
	&-close {
		cursor: pointer;
	}
	&-input {
		flex: 1;
		border: none;
		color: $grayscale-700;
		background: transparent;
		&::placeholder {
			color: $grayscale;
		}
		&:focus {
			outline: 0;
		}
	}
	// status
	&:hover {
		border-color: $grayscale;
	}
	&:focus,
	&:active {
		outline: 0;
		box-shadow: 0 0 0 2px $grayscale-300;
	}
	&.disabled {
		background-color: $grayscale-100;
		pointer-events: none;
		#{$this}-icon,
		#{$this}-input,
		#{$this}-input::placeholder {
			color: $grayscale-400;
		}
		#{$this}-input,
		#{$this}-close {
			display: none;
		}
	}
	// size
	&-lg {
		padding: 0 $spacing * 2 0 $spacing * 4;
		min-height: 36px;
		#{$this}-input {
			@extend .f-s-p-16;
		}
	}
	&-md {
		padding: 0 $spacing * 2 0 $spacing * 3;
		min-height: 32px;
		#{$this}-input {
			@extend .f-s-p-14;
		}
	}
	&-sm {
		padding: 0 $spacing * 2;
		min-height: 28px;
		#{$this}-input {
			@extend .f-s-p-14;
		}
	}
}
